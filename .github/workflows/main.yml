name: Deploy

on:
  page_build:
    release:
      types:
        - created
  workflow_dispatch:

jobs:
  frontend:
    name: "Deploy frontend"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: build
        run: |
          cd iztech-ceng316
          yarn build frontend --configuration production
      - uses: ./
        id: vercel-action-production
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: iztech-ceng316/dist/apps/frontend
          vercel-args: '--prod'
  # backend:
  #   name: "Deploy backend"
  #   runs-on: ubuntu-latest
  #   env:
  #     DIGITALOCEAN_TOKEN: ${{ secrets.DIGITALOCEAN_TOKEN }}
  #     DIGITALOCEAN_APP_ID: ${{ secrets.DIGITALOCEAN_APP_ID }}
  #     VERCEL_HOOK_DEPLOY: ${{ secrets.VERCEL_HOOK_DEPLOY }}
  #   steps:
  #     - name: Trigger API Deployment
  #       run: |
  #         curl -X POST \
  #         -H "Content-Type: application/json" \
  #         -H "Authorization: Bearer $DIGITALOCEAN_TOKEN" \
  #         "https://api.digitalocean.com/v2/apps/$DIGITALOCEAN_APP_ID/deployments"

  #     - name: Trigger Frontend Deployment
  #       run: curl -X POST $VERCEL_HOOK_DEPLOY
